apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: stock-time-series-forecast-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.0.0, pipelines.kubeflow.org/pipeline_compilation_time: '2020-10-23T13:00:19.987774',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Time Series Forecast for
      stock based on historic data.", "inputs": [{"default": "True", "name": "download_data",
      "optional": true}, {"default": "szrlee/stock-time-series-20050101-to-20171231",
      "name": "kaggle_dataset_name", "optional": true}, {"default": "djia-kaggle-dataset",
      "name": "data_pvc_name", "optional": true}, {"default": "djia_30_stock_data/",
      "name": "raw_data_dir", "optional": true}, {"default": "preproc_djia_30_stock_data/",
      "name": "processed_data_dir", "optional": true}, {"default": "1Gi", "name":
      "data_pvc_size", "optional": true}, {"default": "False", "name": "restore_data_from_snasphot",
      "optional": true}, {"default": "snapshot-djia-kaggle-dataset", "name": "data_snapshot_name",
      "optional": true}, {"default": "muneer-kaggle-credentials", "name": "kaggle_credentials_k8s_secret",
      "optional": true}, {"default": "3000", "name": "itr", "optional": true}, {"default":
      "24", "name": "input_features", "optional": true}, {"default": "FlatModel",
      "name": "model_name", "optional": true}, {"default": "v1", "name": "model_tag",
      "optional": true}, {"default": "models/", "name": "model_path", "optional":
      true}, {"default": "False", "name": "use_existing_model_pvc", "optional": true},
      {"default": "djia-time-series-model", "name": "model_pvc_name", "optional":
      true}, {"default": "1Gi", "name": "model_pvc_size", "optional": true}], "name":
      "Stock Time Series Forecast"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.0.0}
spec:
  entrypoint: stock-time-series-forecast
  templates:
  - name: condition-1
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: data_pvc_size}
      - {name: input_features}
      - {name: itr}
      - {name: kaggle_credentials_k8s_secret}
      - {name: kaggle_dataset_name}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_pvc_size}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: raw_data_dir}
      - {name: use_existing_model_pvc}
    dag:
      tasks:
      - name: condition-2
        template: condition-2
        when: '"{{inputs.parameters.use_existing_model_pvc}}" == "True"'
        dependencies: [preprocess-stock-data, volume-for-kaggle-dataset]
        arguments:
          parameters:
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: volume-for-kaggle-dataset-name, value: '{{tasks.volume-for-kaggle-dataset.outputs.parameters.volume-for-kaggle-dataset-name}}'}
      - name: condition-3
        template: condition-3
        when: '"{{inputs.parameters.use_existing_model_pvc}}" == "False"'
        dependencies: [preprocess-stock-data, volume-for-kaggle-dataset]
        arguments:
          parameters:
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_pvc_size, value: '{{inputs.parameters.model_pvc_size}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: volume-for-kaggle-dataset-name, value: '{{tasks.volume-for-kaggle-dataset.outputs.parameters.volume-for-kaggle-dataset-name}}'}
      - name: consolidate-data
        template: consolidate-data
        dependencies: [volume-for-kaggle-dataset]
        arguments:
          parameters:
          - {name: kaggle_credentials_k8s_secret, value: '{{inputs.parameters.kaggle_credentials_k8s_secret}}'}
          - {name: kaggle_dataset_name, value: '{{inputs.parameters.kaggle_dataset_name}}'}
          - {name: raw_data_dir, value: '{{inputs.parameters.raw_data_dir}}'}
          - {name: volume-for-kaggle-dataset-name, value: '{{tasks.volume-for-kaggle-dataset.outputs.parameters.volume-for-kaggle-dataset-name}}'}
      - name: preprocess-stock-data
        template: preprocess-stock-data
        dependencies: [consolidate-data, volume-for-kaggle-dataset]
        arguments:
          parameters:
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: raw_data_dir, value: '{{inputs.parameters.raw_data_dir}}'}
          - {name: volume-for-kaggle-dataset-name, value: '{{tasks.volume-for-kaggle-dataset.outputs.parameters.volume-for-kaggle-dataset-name}}'}
      - name: volume-for-kaggle-dataset
        template: volume-for-kaggle-dataset
        arguments:
          parameters:
          - {name: data_pvc_name, value: '{{inputs.parameters.data_pvc_name}}'}
          - {name: data_pvc_size, value: '{{inputs.parameters.data_pvc_size}}'}
  - name: condition-10
    inputs:
      parameters:
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_pvc_size}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: restore-data-from-snapshot-name}
    dag:
      tasks:
      - name: model-volume-creation-3
        template: model-volume-creation-3
        arguments:
          parameters:
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_pvc_size, value: '{{inputs.parameters.model_pvc_size}}'}
      - name: training-using-existing-pvc-for-training-model-6
        template: training-using-existing-pvc-for-training-model-6
        dependencies: [model-volume-creation-3]
        arguments:
          parameters:
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model-volume-creation-3-name, value: '{{tasks.model-volume-creation-3.outputs.parameters.model-volume-creation-3-name}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: restore-data-from-snapshot-name, value: '{{inputs.parameters.restore-data-from-snapshot-name}}'}
  - name: condition-2
    inputs:
      parameters:
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: volume-for-kaggle-dataset-name}
    dag:
      tasks:
      - name: training-using-existing-pvc-for-training-model
        template: training-using-existing-pvc-for-training-model
        arguments:
          parameters:
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: volume-for-kaggle-dataset-name, value: '{{inputs.parameters.volume-for-kaggle-dataset-name}}'}
  - name: condition-3
    inputs:
      parameters:
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_pvc_size}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: volume-for-kaggle-dataset-name}
    dag:
      tasks:
      - name: model-volume-creation
        template: model-volume-creation
        arguments:
          parameters:
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_pvc_size, value: '{{inputs.parameters.model_pvc_size}}'}
      - name: training-using-existing-pvc-for-training-model-2
        template: training-using-existing-pvc-for-training-model-2
        dependencies: [model-volume-creation]
        arguments:
          parameters:
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model-volume-creation-name, value: '{{tasks.model-volume-creation.outputs.parameters.model-volume-creation-name}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: volume-for-kaggle-dataset-name, value: '{{inputs.parameters.volume-for-kaggle-dataset-name}}'}
  - name: condition-4
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: data_pvc_size}
      - {name: data_snapshot_name}
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_pvc_size}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: raw_data_dir}
      - {name: restore_data_from_snasphot}
      - {name: use_existing_model_pvc}
    dag:
      tasks:
      - name: condition-5
        template: condition-5
        when: '"{{inputs.parameters.restore_data_from_snasphot}}" == "False"'
        arguments:
          parameters:
          - {name: data_pvc_name, value: '{{inputs.parameters.data_pvc_name}}'}
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_pvc_size, value: '{{inputs.parameters.model_pvc_size}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: raw_data_dir, value: '{{inputs.parameters.raw_data_dir}}'}
          - {name: use_existing_model_pvc, value: '{{inputs.parameters.use_existing_model_pvc}}'}
      - name: condition-8
        template: condition-8
        when: '"{{inputs.parameters.restore_data_from_snasphot}}" == "True"'
        arguments:
          parameters:
          - {name: data_pvc_name, value: '{{inputs.parameters.data_pvc_name}}'}
          - {name: data_pvc_size, value: '{{inputs.parameters.data_pvc_size}}'}
          - {name: data_snapshot_name, value: '{{inputs.parameters.data_snapshot_name}}'}
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_pvc_size, value: '{{inputs.parameters.model_pvc_size}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: raw_data_dir, value: '{{inputs.parameters.raw_data_dir}}'}
          - {name: use_existing_model_pvc, value: '{{inputs.parameters.use_existing_model_pvc}}'}
  - name: condition-5
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_pvc_size}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: raw_data_dir}
      - {name: use_existing_model_pvc}
    dag:
      tasks:
      - name: condition-6
        template: condition-6
        when: '"{{inputs.parameters.use_existing_model_pvc}}" == "True"'
        dependencies: [preprocess-stock-data-2]
        arguments:
          parameters:
          - {name: data_pvc_name, value: '{{inputs.parameters.data_pvc_name}}'}
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
      - name: condition-7
        template: condition-7
        when: '"{{inputs.parameters.use_existing_model_pvc}}" == "False"'
        dependencies: [preprocess-stock-data-2]
        arguments:
          parameters:
          - {name: data_pvc_name, value: '{{inputs.parameters.data_pvc_name}}'}
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_pvc_size, value: '{{inputs.parameters.model_pvc_size}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
      - name: preprocess-stock-data-2
        template: preprocess-stock-data-2
        arguments:
          parameters:
          - {name: data_pvc_name, value: '{{inputs.parameters.data_pvc_name}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: raw_data_dir, value: '{{inputs.parameters.raw_data_dir}}'}
  - name: condition-6
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_tag}
      - {name: processed_data_dir}
    dag:
      tasks:
      - name: training-using-existing-pvc-for-training-model-3
        template: training-using-existing-pvc-for-training-model-3
        arguments:
          parameters:
          - {name: data_pvc_name, value: '{{inputs.parameters.data_pvc_name}}'}
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
  - name: condition-7
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_pvc_size}
      - {name: model_tag}
      - {name: processed_data_dir}
    dag:
      tasks:
      - name: model-volume-creation-2
        template: model-volume-creation-2
        arguments:
          parameters:
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_pvc_size, value: '{{inputs.parameters.model_pvc_size}}'}
      - name: training-using-existing-pvc-for-training-model-4
        template: training-using-existing-pvc-for-training-model-4
        dependencies: [model-volume-creation-2]
        arguments:
          parameters:
          - {name: data_pvc_name, value: '{{inputs.parameters.data_pvc_name}}'}
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model-volume-creation-2-name, value: '{{tasks.model-volume-creation-2.outputs.parameters.model-volume-creation-2-name}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
  - name: condition-8
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: data_pvc_size}
      - {name: data_snapshot_name}
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_pvc_size}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: raw_data_dir}
      - {name: use_existing_model_pvc}
    dag:
      tasks:
      - name: condition-10
        template: condition-10
        when: '"{{inputs.parameters.use_existing_model_pvc}}" == "False"'
        dependencies: [preprocess-stock-data-3, restore-data-from-snapshot]
        arguments:
          parameters:
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_pvc_size, value: '{{inputs.parameters.model_pvc_size}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: restore-data-from-snapshot-name, value: '{{tasks.restore-data-from-snapshot.outputs.parameters.restore-data-from-snapshot-name}}'}
      - name: condition-9
        template: condition-9
        when: '"{{inputs.parameters.use_existing_model_pvc}}" == "True"'
        dependencies: [preprocess-stock-data-3, restore-data-from-snapshot]
        arguments:
          parameters:
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: restore-data-from-snapshot-name, value: '{{tasks.restore-data-from-snapshot.outputs.parameters.restore-data-from-snapshot-name}}'}
      - name: preprocess-stock-data-3
        template: preprocess-stock-data-3
        dependencies: [restore-data-from-snapshot]
        arguments:
          parameters:
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: raw_data_dir, value: '{{inputs.parameters.raw_data_dir}}'}
          - {name: restore-data-from-snapshot-name, value: '{{tasks.restore-data-from-snapshot.outputs.parameters.restore-data-from-snapshot-name}}'}
      - name: restore-data-from-snapshot
        template: restore-data-from-snapshot
        arguments:
          parameters:
          - {name: data_pvc_name, value: '{{inputs.parameters.data_pvc_name}}'}
          - {name: data_pvc_size, value: '{{inputs.parameters.data_pvc_size}}'}
          - {name: data_snapshot_name, value: '{{inputs.parameters.data_snapshot_name}}'}
  - name: condition-9
    inputs:
      parameters:
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: restore-data-from-snapshot-name}
    dag:
      tasks:
      - name: training-using-existing-pvc-for-training-model-5
        template: training-using-existing-pvc-for-training-model-5
        arguments:
          parameters:
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: restore-data-from-snapshot-name, value: '{{inputs.parameters.restore-data-from-snapshot-name}}'}
  - name: consolidate-data
    container:
      args: [--dataset_name, '{{inputs.parameters.kaggle_dataset_name}}', --download_dir,
        '{{inputs.parameters.raw_data_dir}}']
      command: [python3.6, download_kaggle_dataset.py]
      image: muneer7589/fintech-dataset-download
      volumeMounts:
      - {mountPath: /mnt/data, name: volume-for-kaggle-dataset}
      - {mountPath: /mnt/secret, name: kaggle-credentials}
    inputs:
      parameters:
      - {name: kaggle_credentials_k8s_secret}
      - {name: kaggle_dataset_name}
      - {name: raw_data_dir}
      - {name: volume-for-kaggle-dataset-name}
    volumes:
    - name: kaggle-credentials
      secret: {secretName: '{{inputs.parameters.kaggle_credentials_k8s_secret}}'}
    - name: volume-for-kaggle-dataset
      persistentVolumeClaim: {claimName: '{{inputs.parameters.volume-for-kaggle-dataset-name}}'}
  - name: model-volume-creation
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-{{inputs.parameters.model_pvc_name}}'
        spec:
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: '{{inputs.parameters.model_pvc_size}}'
    inputs:
      parameters:
      - {name: model_pvc_name}
      - {name: model_pvc_size}
    outputs:
      parameters:
      - name: model-volume-creation-manifest
        valueFrom: {jsonPath: '{}'}
      - name: model-volume-creation-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: model-volume-creation-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
  - name: model-volume-creation-2
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-{{inputs.parameters.model_pvc_name}}'
        spec:
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: '{{inputs.parameters.model_pvc_size}}'
    inputs:
      parameters:
      - {name: model_pvc_name}
      - {name: model_pvc_size}
    outputs:
      parameters:
      - name: model-volume-creation-2-manifest
        valueFrom: {jsonPath: '{}'}
      - name: model-volume-creation-2-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: model-volume-creation-2-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
  - name: model-volume-creation-3
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-{{inputs.parameters.model_pvc_name}}'
        spec:
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: '{{inputs.parameters.model_pvc_size}}'
    inputs:
      parameters:
      - {name: model_pvc_name}
      - {name: model_pvc_size}
    outputs:
      parameters:
      - name: model-volume-creation-3-manifest
        valueFrom: {jsonPath: '{}'}
      - name: model-volume-creation-3-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: model-volume-creation-3-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
  - name: preprocess-stock-data
    container:
      args: [--raw_data_dir, '{{inputs.parameters.raw_data_dir}}', --preprocessed_dir,
        '{{inputs.parameters.processed_data_dir}}']
      command: [python3.6, preprocess_data.py]
      image: muneer7589/fintech-preprocess-data
      volumeMounts:
      - {mountPath: /mnt/data, name: volume-for-kaggle-dataset}
    inputs:
      parameters:
      - {name: processed_data_dir}
      - {name: raw_data_dir}
      - {name: volume-for-kaggle-dataset-name}
    volumes:
    - name: volume-for-kaggle-dataset
      persistentVolumeClaim: {claimName: '{{inputs.parameters.volume-for-kaggle-dataset-name}}'}
  - name: preprocess-stock-data-2
    container:
      args: [--raw_data_dir, '{{inputs.parameters.raw_data_dir}}', --preprocessed_dir,
        '{{inputs.parameters.processed_data_dir}}']
      command: [python3.6, preprocess_data.py]
      image: muneer7589/fintech-preprocess-data
      volumeMounts:
      - {mountPath: /mnt/data, name: pvolume-5dd4b4f95afe004981fabc30a3f2ab95456f0c8e87cabcdb71daa17}
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: processed_data_dir}
      - {name: raw_data_dir}
    volumes:
    - name: pvolume-5dd4b4f95afe004981fabc30a3f2ab95456f0c8e87cabcdb71daa17
      persistentVolumeClaim: {claimName: '{{inputs.parameters.data_pvc_name}}'}
  - name: preprocess-stock-data-3
    container:
      args: [--raw_data_dir, '{{inputs.parameters.raw_data_dir}}', --preprocessed_dir,
        '{{inputs.parameters.processed_data_dir}}']
      command: [python3.6, preprocess_data.py]
      image: muneer7589/fintech-preprocess-data
      volumeMounts:
      - {mountPath: /mnt/data, name: restore-data-from-snapshot}
    inputs:
      parameters:
      - {name: processed_data_dir}
      - {name: raw_data_dir}
      - {name: restore-data-from-snapshot-name}
    volumes:
    - name: restore-data-from-snapshot
      persistentVolumeClaim: {claimName: '{{inputs.parameters.restore-data-from-snapshot-name}}'}
  - name: restore-data-from-snapshot
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-{{inputs.parameters.data_pvc_name}}'
        spec:
          accessModes:
          - ReadWriteMany
          dataSource:
            apiGroup: snapshot.storage.k8s.io
            kind: VolumeSnapshot
            name: '{{inputs.parameters.data_snapshot_name}}'
          resources:
            requests:
              storage: '{{inputs.parameters.data_pvc_size}}'
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: data_pvc_size}
      - {name: data_snapshot_name}
    outputs:
      parameters:
      - name: restore-data-from-snapshot-manifest
        valueFrom: {jsonPath: '{}'}
      - name: restore-data-from-snapshot-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: restore-data-from-snapshot-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
  - name: stock-time-series-forecast
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: data_pvc_size}
      - {name: data_snapshot_name}
      - {name: download_data}
      - {name: input_features}
      - {name: itr}
      - {name: kaggle_credentials_k8s_secret}
      - {name: kaggle_dataset_name}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_pvc_size}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: raw_data_dir}
      - {name: restore_data_from_snasphot}
      - {name: use_existing_model_pvc}
    dag:
      tasks:
      - name: condition-1
        template: condition-1
        when: '"{{inputs.parameters.download_data}}" == "True"'
        arguments:
          parameters:
          - {name: data_pvc_name, value: '{{inputs.parameters.data_pvc_name}}'}
          - {name: data_pvc_size, value: '{{inputs.parameters.data_pvc_size}}'}
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: kaggle_credentials_k8s_secret, value: '{{inputs.parameters.kaggle_credentials_k8s_secret}}'}
          - {name: kaggle_dataset_name, value: '{{inputs.parameters.kaggle_dataset_name}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_pvc_size, value: '{{inputs.parameters.model_pvc_size}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: raw_data_dir, value: '{{inputs.parameters.raw_data_dir}}'}
          - {name: use_existing_model_pvc, value: '{{inputs.parameters.use_existing_model_pvc}}'}
      - name: condition-4
        template: condition-4
        when: '"{{inputs.parameters.download_data}}" == "False"'
        arguments:
          parameters:
          - {name: data_pvc_name, value: '{{inputs.parameters.data_pvc_name}}'}
          - {name: data_pvc_size, value: '{{inputs.parameters.data_pvc_size}}'}
          - {name: data_snapshot_name, value: '{{inputs.parameters.data_snapshot_name}}'}
          - {name: input_features, value: '{{inputs.parameters.input_features}}'}
          - {name: itr, value: '{{inputs.parameters.itr}}'}
          - {name: model_name, value: '{{inputs.parameters.model_name}}'}
          - {name: model_path, value: '{{inputs.parameters.model_path}}'}
          - {name: model_pvc_name, value: '{{inputs.parameters.model_pvc_name}}'}
          - {name: model_pvc_size, value: '{{inputs.parameters.model_pvc_size}}'}
          - {name: model_tag, value: '{{inputs.parameters.model_tag}}'}
          - {name: processed_data_dir, value: '{{inputs.parameters.processed_data_dir}}'}
          - {name: raw_data_dir, value: '{{inputs.parameters.raw_data_dir}}'}
          - {name: restore_data_from_snasphot, value: '{{inputs.parameters.restore_data_from_snasphot}}'}
          - {name: use_existing_model_pvc, value: '{{inputs.parameters.use_existing_model_pvc}}'}
  - name: training-using-existing-pvc-for-training-model
    container:
      args: [--preprocessed_data_path, '{{inputs.parameters.processed_data_dir}}',
        --tag, '{{inputs.parameters.model_tag}}', --model_path, '{{inputs.parameters.model_path}}',
        --model, '{{inputs.parameters.model_name}}', --itr, '{{inputs.parameters.itr}}',
        --input_features, '{{inputs.parameters.input_features}}']
      command: [python3.6, timeseries_training.py]
      image: muneer7589/fintech-train
      volumeMounts:
      - {mountPath: /mnt/models, name: pvolume-379ec214388c1a26014c6a3a703e883a6d2158aab4ba8bda74d1622}
      - {mountPath: /mnt/data, name: volume-for-kaggle-dataset}
    inputs:
      parameters:
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: volume-for-kaggle-dataset-name}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /mlpipeline-metrics.json}
      - {name: training-using-existing-pvc-for-training-model-accuracy, path: /tmp/accuracy}
    volumes:
    - name: pvolume-379ec214388c1a26014c6a3a703e883a6d2158aab4ba8bda74d1622
      persistentVolumeClaim: {claimName: '{{inputs.parameters.model_pvc_name}}'}
    - name: volume-for-kaggle-dataset
      persistentVolumeClaim: {claimName: '{{inputs.parameters.volume-for-kaggle-dataset-name}}'}
  - name: training-using-existing-pvc-for-training-model-2
    container:
      args: [--preprocessed_data_path, '{{inputs.parameters.processed_data_dir}}',
        --tag, '{{inputs.parameters.model_tag}}', --model_path, '{{inputs.parameters.model_path}}',
        --model, '{{inputs.parameters.model_name}}', --itr, '{{inputs.parameters.itr}}',
        --input_features, '{{inputs.parameters.input_features}}']
      command: [python3.6, timeseries_training.py]
      image: muneer7589/fintech-train
      volumeMounts:
      - {mountPath: /mnt/models, name: model-volume-creation}
      - {mountPath: /mnt/data, name: volume-for-kaggle-dataset}
    inputs:
      parameters:
      - {name: input_features}
      - {name: itr}
      - {name: model-volume-creation-name}
      - {name: model_name}
      - {name: model_path}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: volume-for-kaggle-dataset-name}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /mlpipeline-metrics.json}
      - {name: training-using-existing-pvc-for-training-model-2-accuracy, path: /tmp/accuracy}
    volumes:
    - name: model-volume-creation
      persistentVolumeClaim: {claimName: '{{inputs.parameters.model-volume-creation-name}}'}
    - name: volume-for-kaggle-dataset
      persistentVolumeClaim: {claimName: '{{inputs.parameters.volume-for-kaggle-dataset-name}}'}
  - name: training-using-existing-pvc-for-training-model-3
    container:
      args: [--preprocessed_data_path, '{{inputs.parameters.processed_data_dir}}',
        --tag, '{{inputs.parameters.model_tag}}', --model_path, '{{inputs.parameters.model_path}}',
        --model, '{{inputs.parameters.model_name}}', --itr, '{{inputs.parameters.itr}}',
        --input_features, '{{inputs.parameters.input_features}}']
      command: [python3.6, timeseries_training.py]
      image: muneer7589/fintech-train
      volumeMounts:
      - {mountPath: /mnt/models, name: pvolume-379ec214388c1a26014c6a3a703e883a6d2158aab4ba8bda74d1622}
      - {mountPath: /mnt/data, name: pvolume-5dd4b4f95afe004981fabc30a3f2ab95456f0c8e87cabcdb71daa17}
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_tag}
      - {name: processed_data_dir}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /mlpipeline-metrics.json}
      - {name: training-using-existing-pvc-for-training-model-3-accuracy, path: /tmp/accuracy}
    volumes:
    - name: pvolume-379ec214388c1a26014c6a3a703e883a6d2158aab4ba8bda74d1622
      persistentVolumeClaim: {claimName: '{{inputs.parameters.model_pvc_name}}'}
    - name: pvolume-5dd4b4f95afe004981fabc30a3f2ab95456f0c8e87cabcdb71daa17
      persistentVolumeClaim: {claimName: '{{inputs.parameters.data_pvc_name}}'}
  - name: training-using-existing-pvc-for-training-model-4
    container:
      args: [--preprocessed_data_path, '{{inputs.parameters.processed_data_dir}}',
        --tag, '{{inputs.parameters.model_tag}}', --model_path, '{{inputs.parameters.model_path}}',
        --model, '{{inputs.parameters.model_name}}', --itr, '{{inputs.parameters.itr}}',
        --input_features, '{{inputs.parameters.input_features}}']
      command: [python3.6, timeseries_training.py]
      image: muneer7589/fintech-train
      volumeMounts:
      - {mountPath: /mnt/models, name: model-volume-creation-2}
      - {mountPath: /mnt/data, name: pvolume-5dd4b4f95afe004981fabc30a3f2ab95456f0c8e87cabcdb71daa17}
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: input_features}
      - {name: itr}
      - {name: model-volume-creation-2-name}
      - {name: model_name}
      - {name: model_path}
      - {name: model_tag}
      - {name: processed_data_dir}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /mlpipeline-metrics.json}
      - {name: training-using-existing-pvc-for-training-model-4-accuracy, path: /tmp/accuracy}
    volumes:
    - name: model-volume-creation-2
      persistentVolumeClaim: {claimName: '{{inputs.parameters.model-volume-creation-2-name}}'}
    - name: pvolume-5dd4b4f95afe004981fabc30a3f2ab95456f0c8e87cabcdb71daa17
      persistentVolumeClaim: {claimName: '{{inputs.parameters.data_pvc_name}}'}
  - name: training-using-existing-pvc-for-training-model-5
    container:
      args: [--preprocessed_data_path, '{{inputs.parameters.processed_data_dir}}',
        --tag, '{{inputs.parameters.model_tag}}', --model_path, '{{inputs.parameters.model_path}}',
        --model, '{{inputs.parameters.model_name}}', --itr, '{{inputs.parameters.itr}}',
        --input_features, '{{inputs.parameters.input_features}}']
      command: [python3.6, timeseries_training.py]
      image: muneer7589/fintech-train
      volumeMounts:
      - {mountPath: /mnt/models, name: pvolume-379ec214388c1a26014c6a3a703e883a6d2158aab4ba8bda74d1622}
      - {mountPath: /mnt/data, name: restore-data-from-snapshot}
    inputs:
      parameters:
      - {name: input_features}
      - {name: itr}
      - {name: model_name}
      - {name: model_path}
      - {name: model_pvc_name}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: restore-data-from-snapshot-name}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /mlpipeline-metrics.json}
      - {name: training-using-existing-pvc-for-training-model-5-accuracy, path: /tmp/accuracy}
    volumes:
    - name: pvolume-379ec214388c1a26014c6a3a703e883a6d2158aab4ba8bda74d1622
      persistentVolumeClaim: {claimName: '{{inputs.parameters.model_pvc_name}}'}
    - name: restore-data-from-snapshot
      persistentVolumeClaim: {claimName: '{{inputs.parameters.restore-data-from-snapshot-name}}'}
  - name: training-using-existing-pvc-for-training-model-6
    container:
      args: [--preprocessed_data_path, '{{inputs.parameters.processed_data_dir}}',
        --tag, '{{inputs.parameters.model_tag}}', --model_path, '{{inputs.parameters.model_path}}',
        --model, '{{inputs.parameters.model_name}}', --itr, '{{inputs.parameters.itr}}',
        --input_features, '{{inputs.parameters.input_features}}']
      command: [python3.6, timeseries_training.py]
      image: muneer7589/fintech-train
      volumeMounts:
      - {mountPath: /mnt/models, name: model-volume-creation-3}
      - {mountPath: /mnt/data, name: restore-data-from-snapshot}
    inputs:
      parameters:
      - {name: input_features}
      - {name: itr}
      - {name: model-volume-creation-3-name}
      - {name: model_name}
      - {name: model_path}
      - {name: model_tag}
      - {name: processed_data_dir}
      - {name: restore-data-from-snapshot-name}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /mlpipeline-metrics.json}
      - {name: training-using-existing-pvc-for-training-model-6-accuracy, path: /tmp/accuracy}
    volumes:
    - name: model-volume-creation-3
      persistentVolumeClaim: {claimName: '{{inputs.parameters.model-volume-creation-3-name}}'}
    - name: restore-data-from-snapshot
      persistentVolumeClaim: {claimName: '{{inputs.parameters.restore-data-from-snapshot-name}}'}
  - name: volume-for-kaggle-dataset
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-{{inputs.parameters.data_pvc_name}}'
        spec:
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: '{{inputs.parameters.data_pvc_size}}'
    inputs:
      parameters:
      - {name: data_pvc_name}
      - {name: data_pvc_size}
    outputs:
      parameters:
      - name: volume-for-kaggle-dataset-manifest
        valueFrom: {jsonPath: '{}'}
      - name: volume-for-kaggle-dataset-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: volume-for-kaggle-dataset-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
  arguments:
    parameters:
    - name: download_data
      value: "True"
    - {name: kaggle_dataset_name, value: szrlee/stock-time-series-20050101-to-20171231}
    - {name: data_pvc_name, value: djia-kaggle-dataset}
    - {name: raw_data_dir, value: djia_30_stock_data/}
    - {name: processed_data_dir, value: preproc_djia_30_stock_data/}
    - {name: data_pvc_size, value: 1Gi}
    - name: restore_data_from_snasphot
      value: "False"
    - {name: data_snapshot_name, value: snapshot-djia-kaggle-dataset}
    - {name: kaggle_credentials_k8s_secret, value: muneer-kaggle-credentials}
    - {name: itr, value: '3000'}
    - {name: input_features, value: '24'}
    - {name: model_name, value: FlatModel}
    - {name: model_tag, value: v1}
    - {name: model_path, value: models/}
    - name: use_existing_model_pvc
      value: "False"
    - {name: model_pvc_name, value: djia-time-series-model}
    - {name: model_pvc_size, value: 1Gi}
  serviceAccountName: pipeline-runner
